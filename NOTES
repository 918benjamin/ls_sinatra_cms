Bonus features:
X Validate that document names contain an extension that the application supports.
X Add a "duplicate" button that creates a new document based on an old one.
X Extend this project with a user signup form.
- Add the ability to upload images to the CMS (which could be referenced within markdown files).
- Modify the CMS so that each version of a document is preserved as changes are made to it.
Mine:
- Add the ability to change a document name?



Current:
- in index.erb, link each bullet to the page
  - the link is "/<%= file %>
- create a new route "/:file_name"
  - params[:file_name] references the file name
  - @text = access the data in the file ("/data/file_name)
  - return an erb view :document

- create a new view template document.erb
  - display @text, within <p> tag?

- Set an appropriate value for the Content-Type header to tell browsers to display the response as plain text.

Reminders:
- erb files go in the /views
- erb files need to be referenced in a route
- When you start using erb files, require "tilt/erubis" in main app file and add gem "erubis" to Gemfile
- Every time you change the gemfile, run bundle install
- Run program with bundle exec prepend
- text files go in /data
- specify url parameters with a symbol, access them with params[:symbol]
- set headers with headers["Header-Field"] = "value"


Future:
Look at automating the project setup process - rake? bash?
What is tilt? What is erubis? Why don't we need to require "erb"?
